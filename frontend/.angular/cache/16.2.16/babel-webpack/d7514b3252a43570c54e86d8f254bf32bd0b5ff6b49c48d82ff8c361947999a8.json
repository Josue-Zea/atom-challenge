{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tasks.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/common\";\nexport class TaskCardComponent {\n  constructor(_tasksService, _authService) {\n    this._tasksService = _tasksService;\n    this._authService = _authService;\n    this.task = {\n      taskId: \"\",\n      title: \"\",\n      description: \"\",\n      creation_date: new Date(),\n      completed: false\n    };\n  }\n  toggleTaskStatus(task) {\n    task.completed = !task.completed;\n    // this.saveTasks();\n  }\n\n  editTask(task) {\n    // this.isEditing = true;\n    // this.taskToEdit = task;\n    // this.taskForm.patchValue(task);\n  }\n  deleteTask(taskId) {\n    const token = this._authService.getToken();\n    if (!token || !taskId) {\n      return;\n    }\n    this._tasksService.deleteTask(taskId, token);\n  }\n  static {\n    this.ɵfac = function TaskCardComponent_Factory(t) {\n      return new (t || TaskCardComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskCardComponent,\n      selectors: [[\"app-task-card\"]],\n      inputs: {\n        task: \"task\"\n      },\n      decls: 20,\n      vars: 7,\n      consts: [[1, \"text-lg\", \"font-bold\", \"text-gray-800\"], [1, \"text-sm\", \"text-gray-600\", \"mb-2\"], [1, \"text-xs\", \"text-gray-400\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mt-4\"], [1, \"flex\", \"items-center\", \"text-sm\", \"font-medium\", \"space-x-2\"], [\"type\", \"checkbox\", 1, \"w-5\", \"h-5\", \"accent-blue-600\", \"border-gray-400\", \"rounded-md\", \"transition-all\", \"duration-200\", \"hover:scale-110\", \"focus:ring\", \"focus:ring-blue-300\", 3, \"checked\", \"change\"], [1, \"text-gray-700\"], [1, \"flex\", \"space-x-2\"], [1, \"text-blue-600\", 3, \"click\"], [1, \"text-lg\"], [1, \"text-red-600\", 3, \"click\"]],\n      template: function TaskCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 0);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\", 1);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 2);\n          i0.ɵɵtext(6);\n          i0.ɵɵpipe(7, \"date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4)(10, \"input\", 5);\n          i0.ɵɵlistener(\"change\", function TaskCardComponent_Template_input_change_10_listener() {\n            return ctx.toggleTaskStatus(ctx.task);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"span\", 6);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function TaskCardComponent_Template_button_click_14_listener() {\n            return ctx.editTask(ctx.task);\n          });\n          i0.ɵɵelementStart(15, \"mat-icon\", 9);\n          i0.ɵɵtext(16, \"edit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function TaskCardComponent_Template_button_click_17_listener() {\n            return ctx.deleteTask(ctx.task.taskId);\n          });\n          i0.ɵɵelementStart(18, \"mat-icon\", 9);\n          i0.ɵɵtext(19, \"delete\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.task.title);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.task.description);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Creado el: \", i0.ɵɵpipeBind1(7, 5, ctx.task.creation_date), \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"checked\", ctx.task.completed);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.task.completed ? \"Completada\" : \"Pendiente\");\n        }\n      },\n      dependencies: [i3.MatIcon, i4.DatePipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["TaskCardComponent","constructor","_tasksService","_authService","task","taskId","title","description","creation_date","Date","completed","toggleTaskStatus","editTask","deleteTask","token","getToken","i0","ɵɵdirectiveInject","i1","TasksService","i2","AuthService","selectors","inputs","decls","vars","consts","template","TaskCardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskCardComponent_Template_input_change_10_listener","TaskCardComponent_Template_button_click_14_listener","TaskCardComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-card\\task-card.component.ts","C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-card\\task-card.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TasksService } from 'src/app/services/tasks.service';\nimport { Task } from 'src/app/types/task.type';\n\n@Component({\n  selector: 'app-task-card',\n  templateUrl: './task-card.component.html'\n})\nexport class TaskCardComponent {\n  @Input() task: Task;\n\n  constructor(\n    private _tasksService: TasksService,\n    private _authService: AuthService\n  ) {\n    this.task = {\n      taskId: \"\",\n      title: \"\",\n      description: \"\",\n      creation_date: new Date(),\n      completed: false,\n    };\n  }\n  \n  toggleTaskStatus(task: Task): void {\n    task.completed = !task.completed;\n    // this.saveTasks();\n  }\n\n  editTask(task?: Task): void {\n    // this.isEditing = true;\n    // this.taskToEdit = task;\n    // this.taskForm.patchValue(task);\n  }\n\n  deleteTask(taskId?: string): void {\n    const token = this._authService.getToken();\n    if (!token || !taskId) { return; }\n    this._tasksService.deleteTask(taskId, token)\n  }\n}\n","<div>\n    <h3 class=\"text-lg font-bold text-gray-800\">{{ task.title }}</h3>\n    <p class=\"text-sm text-gray-600 mb-2\">{{ task.description }}</p>\n    <p class=\"text-xs text-gray-400\">Creado el: {{ task.creation_date | date }}</p>\n\n    <div class=\"flex items-center justify-between mt-4\">\n        <!-- Estado de la tarea -->\n        <label class=\"flex items-center text-sm font-medium space-x-2\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"task.completed\"\n            (change)=\"toggleTaskStatus(task)\"\n            class=\"w-5 h-5 accent-blue-600 border-gray-400 rounded-md transition-all duration-200 hover:scale-110 focus:ring focus:ring-blue-300\"\n          />\n          <span class=\"text-gray-700\">{{ task.completed ? 'Completada' : 'Pendiente' }}</span>\n        </label>\n      \n        <!-- Botones de acción -->\n        <div class=\"flex space-x-2\">\n          <button\n            (click)=\"editTask(task)\"\n            class=\"text-blue-600\"\n          >\n            <mat-icon class=\"text-lg\">edit</mat-icon>\n          </button>\n          <button\n            (click)=\"deleteTask(task.taskId)\"\n            class=\"text-red-600\"\n          >\n            <mat-icon class=\"text-lg\">delete</mat-icon>\n          </button>\n        </div>\n      </div>\n\n</div>"],"mappings":";;;;;AASA,OAAM,MAAOA,iBAAiB;EAG5BC,YACUC,aAA2B,EAC3BC,YAAyB;IADzB,KAAAD,aAAa,GAAbA,aAAa;IACb,KAAAC,YAAY,GAAZA,YAAY;IAEpB,IAAI,CAACC,IAAI,GAAG;MACVC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,IAAIC,IAAI,EAAE;MACzBC,SAAS,EAAE;KACZ;EACH;EAEAC,gBAAgBA,CAACP,IAAU;IACzBA,IAAI,CAACM,SAAS,GAAG,CAACN,IAAI,CAACM,SAAS;IAChC;EACF;;EAEAE,QAAQA,CAACR,IAAW;IAClB;IACA;IACA;EAAA;EAGFS,UAAUA,CAACR,MAAe;IACxB,MAAMS,KAAK,GAAG,IAAI,CAACX,YAAY,CAACY,QAAQ,EAAE;IAC1C,IAAI,CAACD,KAAK,IAAI,CAACT,MAAM,EAAE;MAAE;;IACzB,IAAI,CAACH,aAAa,CAACW,UAAU,CAACR,MAAM,EAAES,KAAK,CAAC;EAC9C;;;uBA/BWd,iBAAiB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAjBrB,iBAAiB;MAAAsB,SAAA;MAAAC,MAAA;QAAAnB,IAAA;MAAA;MAAAoB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT9Bb,EAAA,CAAAe,cAAA,UAAK;UAC2Cf,EAAA,CAAAgB,MAAA,GAAgB;UAAAhB,EAAA,CAAAiB,YAAA,EAAK;UACjEjB,EAAA,CAAAe,cAAA,WAAsC;UAAAf,EAAA,CAAAgB,MAAA,GAAsB;UAAAhB,EAAA,CAAAiB,YAAA,EAAI;UAChEjB,EAAA,CAAAe,cAAA,WAAiC;UAAAf,EAAA,CAAAgB,MAAA,GAA0C;;UAAAhB,EAAA,CAAAiB,YAAA,EAAI;UAE/EjB,EAAA,CAAAe,cAAA,aAAoD;UAM5Cf,EAAA,CAAAkB,UAAA,oBAAAC,oDAAA;YAAA,OAAUL,GAAA,CAAAnB,gBAAA,CAAAmB,GAAA,CAAA1B,IAAA,CAAsB;UAAA,EAAC;UAHnCY,EAAA,CAAAiB,YAAA,EAKE;UACFjB,EAAA,CAAAe,cAAA,eAA4B;UAAAf,EAAA,CAAAgB,MAAA,IAAiD;UAAAhB,EAAA,CAAAiB,YAAA,EAAO;UAItFjB,EAAA,CAAAe,cAAA,cAA4B;UAExBf,EAAA,CAAAkB,UAAA,mBAAAE,oDAAA;YAAA,OAASN,GAAA,CAAAlB,QAAA,CAAAkB,GAAA,CAAA1B,IAAA,CAAc;UAAA,EAAC;UAGxBY,EAAA,CAAAe,cAAA,mBAA0B;UAAAf,EAAA,CAAAgB,MAAA,YAAI;UAAAhB,EAAA,CAAAiB,YAAA,EAAW;UAE3CjB,EAAA,CAAAe,cAAA,kBAGC;UAFCf,EAAA,CAAAkB,UAAA,mBAAAG,oDAAA;YAAA,OAASP,GAAA,CAAAjB,UAAA,CAAAiB,GAAA,CAAA1B,IAAA,CAAAC,MAAA,CAAuB;UAAA,EAAC;UAGjCW,EAAA,CAAAe,cAAA,mBAA0B;UAAAf,EAAA,CAAAgB,MAAA,cAAM;UAAAhB,EAAA,CAAAiB,YAAA,EAAW;;;UA5BPjB,EAAA,CAAAsB,SAAA,GAAgB;UAAhBtB,EAAA,CAAAuB,iBAAA,CAAAT,GAAA,CAAA1B,IAAA,CAAAE,KAAA,CAAgB;UACtBU,EAAA,CAAAsB,SAAA,GAAsB;UAAtBtB,EAAA,CAAAuB,iBAAA,CAAAT,GAAA,CAAA1B,IAAA,CAAAG,WAAA,CAAsB;UAC3BS,EAAA,CAAAsB,SAAA,GAA0C;UAA1CtB,EAAA,CAAAwB,kBAAA,gBAAAxB,EAAA,CAAAyB,WAAA,OAAAX,GAAA,CAAA1B,IAAA,CAAAI,aAAA,MAA0C;UAOnEQ,EAAA,CAAAsB,SAAA,GAA0B;UAA1BtB,EAAA,CAAA0B,UAAA,YAAAZ,GAAA,CAAA1B,IAAA,CAAAM,SAAA,CAA0B;UAIAM,EAAA,CAAAsB,SAAA,GAAiD;UAAjDtB,EAAA,CAAAuB,iBAAA,CAAAT,GAAA,CAAA1B,IAAA,CAAAM,SAAA,8BAAiD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
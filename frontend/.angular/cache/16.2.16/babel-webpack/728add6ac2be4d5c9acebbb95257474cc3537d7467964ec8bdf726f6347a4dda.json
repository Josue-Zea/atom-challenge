{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/icon\";\nimport * as i2 from \"@angular/common\";\nexport class TaskCardComponent {\n  constructor() {\n    this.task = {\n      id: \"\",\n      title: \"\",\n      description: \"\",\n      creation_date: new Date(),\n      completed: false\n    };\n  }\n  toggleTaskStatus(task) {\n    task.completed = !task.completed;\n    // this.saveTasks();\n  }\n\n  editTask(task) {\n    // this.isEditing = true;\n    // this.taskToEdit = task;\n    // this.taskForm.patchValue(task);\n  }\n  deleteTask(id) {\n    // this.tasks = this.tasks.filter((task) => task.id !== id);\n    // this.saveTasks();\n  }\n  static {\n    this.ɵfac = function TaskCardComponent_Factory(t) {\n      return new (t || TaskCardComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskCardComponent,\n      selectors: [[\"app-task-card\"]],\n      inputs: {\n        task: \"task\"\n      },\n      decls: 20,\n      vars: 7,\n      consts: [[1, \"text-lg\", \"font-bold\", \"text-gray-800\"], [1, \"text-sm\", \"text-gray-600\", \"mb-2\"], [1, \"text-xs\", \"text-gray-400\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mt-4\"], [1, \"flex\", \"items-center\", \"text-sm\", \"font-medium\", \"space-x-2\"], [\"type\", \"checkbox\", 1, \"w-5\", \"h-5\", \"accent-blue-600\", \"border-gray-400\", \"rounded-md\", \"transition-all\", \"duration-200\", \"hover:scale-110\", \"focus:ring\", \"focus:ring-blue-300\", 3, \"checked\", \"change\"], [1, \"text-gray-700\"], [1, \"flex\", \"space-x-2\"], [1, \"text-blue-600\", 3, \"click\"], [1, \"text-lg\"], [1, \"text-red-600\", 3, \"click\"]],\n      template: function TaskCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 0);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\", 1);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 2);\n          i0.ɵɵtext(6);\n          i0.ɵɵpipe(7, \"date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4)(10, \"input\", 5);\n          i0.ɵɵlistener(\"change\", function TaskCardComponent_Template_input_change_10_listener() {\n            return ctx.toggleTaskStatus(ctx.task);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"span\", 6);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function TaskCardComponent_Template_button_click_14_listener() {\n            return ctx.editTask(ctx.task);\n          });\n          i0.ɵɵelementStart(15, \"mat-icon\", 9);\n          i0.ɵɵtext(16, \"edit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function TaskCardComponent_Template_button_click_17_listener() {\n            return ctx.deleteTask(ctx.task.taskId);\n          });\n          i0.ɵɵelementStart(18, \"mat-icon\", 9);\n          i0.ɵɵtext(19, \"delete\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.task.title);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.task.description);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Creado el: \", i0.ɵɵpipeBind1(7, 5, ctx.task.creation_date), \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"checked\", ctx.task.completed);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.task.completed ? \"Completada\" : \"Pendiente\");\n        }\n      },\n      dependencies: [i1.MatIcon, i2.DatePipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["TaskCardComponent","constructor","task","id","title","description","creation_date","Date","completed","toggleTaskStatus","editTask","deleteTask","selectors","inputs","decls","vars","consts","template","TaskCardComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskCardComponent_Template_input_change_10_listener","TaskCardComponent_Template_button_click_14_listener","TaskCardComponent_Template_button_click_17_listener","taskId","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-card\\task-card.component.ts","C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-card\\task-card.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Task } from 'src/app/types/task.type';\n\n@Component({\n  selector: 'app-task-card',\n  templateUrl: './task-card.component.html'\n})\nexport class TaskCardComponent {\n  @Input() task: Task;\n\n  constructor() {\n    this.task = {\n      id: \"\",\n      title: \"\",\n      description: \"\",\n      creation_date: new Date(),\n      completed: false,\n    };\n  }\n\n  \n  toggleTaskStatus(task: Task): void {\n    task.completed = !task.completed;\n    // this.saveTasks();\n  }\n\n  editTask(task: Task): void {\n    // this.isEditing = true;\n    // this.taskToEdit = task;\n    // this.taskForm.patchValue(task);\n  }\n\n  deleteTask(id: string): void {\n    // this.tasks = this.tasks.filter((task) => task.id !== id);\n    // this.saveTasks();\n  }\n}\n","<div>\n    <h3 class=\"text-lg font-bold text-gray-800\">{{ task.title }}</h3>\n    <p class=\"text-sm text-gray-600 mb-2\">{{ task.description }}</p>\n    <p class=\"text-xs text-gray-400\">Creado el: {{ task.creation_date | date }}</p>\n\n    <div class=\"flex items-center justify-between mt-4\">\n        <!-- Estado de la tarea -->\n        <label class=\"flex items-center text-sm font-medium space-x-2\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"task.completed\"\n            (change)=\"toggleTaskStatus(task)\"\n            class=\"w-5 h-5 accent-blue-600 border-gray-400 rounded-md transition-all duration-200 hover:scale-110 focus:ring focus:ring-blue-300\"\n          />\n          <span class=\"text-gray-700\">{{ task.completed ? 'Completada' : 'Pendiente' }}</span>\n        </label>\n      \n        <!-- Botones de acción -->\n        <div class=\"flex space-x-2\">\n          <button\n            (click)=\"editTask(task)\"\n            class=\"text-blue-600\"\n          >\n            <mat-icon class=\"text-lg\">edit</mat-icon>\n          </button>\n          <button\n            (click)=\"deleteTask(task.taskId)\"\n            class=\"text-red-600\"\n          >\n            <mat-icon class=\"text-lg\">delete</mat-icon>\n          </button>\n        </div>\n      </div>\n\n</div>"],"mappings":";;;AAOA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAA;IACE,IAAI,CAACC,IAAI,GAAG;MACVC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,IAAIC,IAAI,EAAE;MACzBC,SAAS,EAAE;KACZ;EACH;EAGAC,gBAAgBA,CAACP,IAAU;IACzBA,IAAI,CAACM,SAAS,GAAG,CAACN,IAAI,CAACM,SAAS;IAChC;EACF;;EAEAE,QAAQA,CAACR,IAAU;IACjB;IACA;IACA;EAAA;EAGFS,UAAUA,CAACR,EAAU;IACnB;IACA;EAAA;;;uBA3BSH,iBAAiB;IAAA;EAAA;;;YAAjBA,iBAAiB;MAAAY,SAAA;MAAAC,MAAA;QAAAX,IAAA;MAAA;MAAAY,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCP9BE,EAAA,CAAAC,cAAA,UAAK;UAC2CD,EAAA,CAAAE,MAAA,GAAgB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACjEH,EAAA,CAAAC,cAAA,WAAsC;UAAAD,EAAA,CAAAE,MAAA,GAAsB;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAChEH,EAAA,CAAAC,cAAA,WAAiC;UAAAD,EAAA,CAAAE,MAAA,GAA0C;;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAE/EH,EAAA,CAAAC,cAAA,aAAoD;UAM5CD,EAAA,CAAAI,UAAA,oBAAAC,oDAAA;YAAA,OAAUN,GAAA,CAAAX,gBAAA,CAAAW,GAAA,CAAAlB,IAAA,CAAsB;UAAA,EAAC;UAHnCmB,EAAA,CAAAG,YAAA,EAKE;UACFH,EAAA,CAAAC,cAAA,eAA4B;UAAAD,EAAA,CAAAE,MAAA,IAAiD;UAAAF,EAAA,CAAAG,YAAA,EAAO;UAItFH,EAAA,CAAAC,cAAA,cAA4B;UAExBD,EAAA,CAAAI,UAAA,mBAAAE,oDAAA;YAAA,OAASP,GAAA,CAAAV,QAAA,CAAAU,GAAA,CAAAlB,IAAA,CAAc;UAAA,EAAC;UAGxBmB,EAAA,CAAAC,cAAA,mBAA0B;UAAAD,EAAA,CAAAE,MAAA,YAAI;UAAAF,EAAA,CAAAG,YAAA,EAAW;UAE3CH,EAAA,CAAAC,cAAA,kBAGC;UAFCD,EAAA,CAAAI,UAAA,mBAAAG,oDAAA;YAAA,OAASR,GAAA,CAAAT,UAAA,CAAAS,GAAA,CAAAlB,IAAA,CAAA2B,MAAA,CAAuB;UAAA,EAAC;UAGjCR,EAAA,CAAAC,cAAA,mBAA0B;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAW;;;UA5BPH,EAAA,CAAAS,SAAA,GAAgB;UAAhBT,EAAA,CAAAU,iBAAA,CAAAX,GAAA,CAAAlB,IAAA,CAAAE,KAAA,CAAgB;UACtBiB,EAAA,CAAAS,SAAA,GAAsB;UAAtBT,EAAA,CAAAU,iBAAA,CAAAX,GAAA,CAAAlB,IAAA,CAAAG,WAAA,CAAsB;UAC3BgB,EAAA,CAAAS,SAAA,GAA0C;UAA1CT,EAAA,CAAAW,kBAAA,gBAAAX,EAAA,CAAAY,WAAA,OAAAb,GAAA,CAAAlB,IAAA,CAAAI,aAAA,MAA0C;UAOnEe,EAAA,CAAAS,SAAA,GAA0B;UAA1BT,EAAA,CAAAa,UAAA,YAAAd,GAAA,CAAAlB,IAAA,CAAAM,SAAA,CAA0B;UAIAa,EAAA,CAAAS,SAAA,GAAiD;UAAjDT,EAAA,CAAAU,iBAAA,CAAAX,GAAA,CAAAlB,IAAA,CAAAM,SAAA,8BAAiD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
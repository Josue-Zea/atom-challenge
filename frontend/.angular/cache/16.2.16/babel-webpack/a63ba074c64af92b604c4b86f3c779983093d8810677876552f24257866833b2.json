{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let TaskFormComponent = class TaskFormComponent {\n  constructor(fb, _tasksService) {\n    this.fb = fb;\n    this._tasksService = _tasksService;\n    this.taskToEdit = null;\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n  addTask() {\n    if (this.isEditing && this.taskToEdit) {\n      // const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n      // if (index !== -1) {\n      //   this.tasks[index] = {\n      //     ...this.taskToEdit,\n      //     ...this.taskForm.value,\n      //   };\n      // }\n      // this.isEditing = false;\n      // this.taskToEdit = null;\n    } else {\n      const newTask = {\n        id: \"\",\n        title: this.taskForm.value.title,\n        description: this.taskForm.value.description,\n        creation_date: new Date(),\n        completed: false\n      };\n    }\n    // this.saveTasks();\n    // this.taskForm.reset();\n  }\n};\n\n__decorate([Input()], TaskFormComponent.prototype, \"isEditing\", void 0);\n__decorate([Input()], TaskFormComponent.prototype, \"taskToEdit\", void 0);\nTaskFormComponent = __decorate([Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html'\n})], TaskFormComponent);","map":{"version":3,"names":["Component","Input","Validators","TaskFormComponent","constructor","fb","_tasksService","taskToEdit","taskForm","group","title","required","description","addTask","isEditing","newTask","id","value","creation_date","Date","completed","__decorate","selector","templateUrl"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-form\\task-form.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TasksService } from 'src/app/services/tasks.service';\nimport { Task } from 'src/app/types/task.type';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html'\n})\nexport class TaskFormComponent {\n  taskForm: FormGroup;\n  @Input() isEditing!: boolean;\n  @Input() taskToEdit: Task | null = null\n\n  constructor(\n    private fb: FormBuilder,\n    private _tasksService: TasksService\n  ) {\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  addTask(): void {\n    if (this.isEditing && this.taskToEdit) {\n      // const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n      // if (index !== -1) {\n      //   this.tasks[index] = {\n      //     ...this.taskToEdit,\n      //     ...this.taskForm.value,\n      //   };\n      // }\n      // this.isEditing = false;\n      // this.taskToEdit = null;\n    } else {\n      const newTask: Task = {\n        id: \"\",\n        title: this.taskForm.value.title,\n        description: this.taskForm.value.description,\n        creation_date: new Date(),\n        completed: false,\n      };\n      \n    }\n\n    // this.saveTasks();\n    // this.taskForm.reset();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAChD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YACUC,EAAe,EACfC,aAA2B;IAD3B,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,aAAa,GAAbA,aAAa;IAJd,KAAAC,UAAU,GAAgB,IAAI;IAMrC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACtC,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACL,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACP,UAAU,EAAE;MACrC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD,MAAM;MACL,MAAMQ,OAAO,GAAS;QACpBC,EAAE,EAAE,EAAE;QACNN,KAAK,EAAE,IAAI,CAACF,QAAQ,CAACS,KAAK,CAACP,KAAK;QAChCE,WAAW,EAAE,IAAI,CAACJ,QAAQ,CAACS,KAAK,CAACL,WAAW;QAC5CM,aAAa,EAAE,IAAIC,IAAI,EAAE;QACzBC,SAAS,EAAE;OACZ;;IAIH;IACA;EACF;CACD;;AAtCUC,UAAA,EAARpB,KAAK,EAAE,C,mDAAqB;AACpBoB,UAAA,EAARpB,KAAK,EAAE,C,oDAA+B;AAH5BE,iBAAiB,GAAAkB,UAAA,EAJ7BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE;CACd,CAAC,C,EACWpB,iBAAiB,CAwC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
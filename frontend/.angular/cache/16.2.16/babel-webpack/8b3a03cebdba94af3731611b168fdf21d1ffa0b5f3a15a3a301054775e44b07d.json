{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jdzea/Desktop/Atom Challenge/solution/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Swal from \"sweetalert2\";\n// import { themeColor } from \"../../configs\";\n// Icons: success, error, warning, info, question\n// position: top, top-start, top-end, center, center-start, center-end, bottom, bottom-start, or bottom-end\nexport const IconAlert = (icon = 'success', text = 'Exito', timer = 1500, position = 'center') => {\n  Swal.fire({\n    position: position,\n    icon: icon,\n    title: text,\n    showConfirmButton: false,\n    timer: timer\n  });\n};\nexport const BigIconAlert = (icon = 'success', text = 'Exito', position = 'center') => {\n  Swal.fire({\n    title: 'Expediente 12345 creado',\n    html: '<h5>Detalle</h5>' + '<h5>Número de expediente: 120-121</h5>' + '<h5>Tipo de trámite: Sociedad</h5>' + '<h5>Tipo de documento: Modificación</h5>' + '<h5>Fecha de creación: 06/05/2023</h5>' + '<h5>Encargado: Operador 1</h5>',\n    position: position,\n    icon: icon,\n    showConfirmButton: true\n  });\n};\nexport const InputAlert = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (text = \"Ingresa tu nombre\") {\n    const result = yield Swal.fire({\n      title: text,\n      input: 'text',\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Confirmar',\n      cancelButtonText: 'Cancelar',\n      showLoaderOnConfirm: false\n    });\n    return result.isConfirmed ? result.value : '';\n  });\n  return function InputAlert() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const YesNoAlert = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (icon = 'warning', title = '¿Estas seguro?', description = 'Esta accion no se puede deshacer', confirmDescription = 'Confirmar') {\n    const result = yield Swal.fire({\n      title: title,\n      text: description,\n      icon: icon,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: confirmDescription,\n      cancelButtonText: 'Cancelar'\n    });\n    return result.isConfirmed;\n  });\n  return function YesNoAlert() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const SmallIconAllert = (icon = \"success\", text = 'Exito', timer = 1500, position = 'top-end') => {\n  const Toast = Swal.mixin({\n    toast: true,\n    position: position,\n    showConfirmButton: false,\n    timer: timer,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    }\n  });\n  Toast.fire({\n    icon: icon,\n    title: text\n  });\n};\nexport const TwoOptionsAlert = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (title = 'Seleccione la opcion a visualizar', option1 = '', option2 = '') {\n    const result = yield Swal.fire({\n      title: title,\n      text: '',\n      showCancelButton: true,\n      // confirmButtonColor: themeColor.primary,\n      // cancelButtonColor: themeColor.primary,\n      confirmButtonText: option1,\n      cancelButtonText: option2\n    });\n    return result.isConfirmed ? 0 : 1;\n  });\n  return function TwoOptionsAlert() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["Swal","IconAlert","icon","text","timer","position","fire","title","showConfirmButton","BigIconAlert","html","InputAlert","_ref","_asyncToGenerator","result","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","isConfirmed","value","apply","arguments","YesNoAlert","_ref2","description","confirmDescription","confirmButtonColor","cancelButtonColor","SmallIconAllert","Toast","mixin","toast","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","TwoOptionsAlert","_ref3","option1","option2"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\alerts\\alerts.ts"],"sourcesContent":["import Swal, { SweetAlertIcon, SweetAlertPosition } from \"sweetalert2\";\r\n// import { themeColor } from \"../../configs\";\r\n// Icons: success, error, warning, info, question\r\n// position: top, top-start, top-end, center, center-start, center-end, bottom, bottom-start, or bottom-end\r\n\r\nexport const IconAlert = (\r\n        icon: SweetAlertIcon = 'success',\r\n        text: string = 'Exito',\r\n        timer: number = 1500,\r\n        position: SweetAlertPosition = 'center') => {\r\n    Swal.fire({\r\n        position: position,\r\n        icon: icon,\r\n        title: text,\r\n        showConfirmButton: false,\r\n        timer: timer\r\n    });\r\n};\r\n\r\nexport const BigIconAlert = (\r\n    icon: SweetAlertIcon = 'success',\r\n    text: string = 'Exito',\r\n    position: SweetAlertPosition = 'center') => {\r\n    Swal.fire({\r\n        title: 'Expediente 12345 creado',\r\n        html:\r\n          '<h5>Detalle</h5>' +\r\n          '<h5>Número de expediente: 120-121</h5>' +\r\n          '<h5>Tipo de trámite: Sociedad</h5>' +\r\n          '<h5>Tipo de documento: Modificación</h5>' +\r\n          '<h5>Fecha de creación: 06/05/2023</h5>' +\r\n          '<h5>Encargado: Operador 1</h5>',\r\n        position: position,\r\n        icon: icon,\r\n        showConfirmButton: true,\r\n    });\r\n};\r\n\r\nexport const InputAlert = async (text: string = \"Ingresa tu nombre\") => {\r\n    const result = await Swal.fire({\r\n        title: text,\r\n        input: 'text',\r\n        inputAttributes: {\r\n            autocapitalize: 'off'\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        showLoaderOnConfirm: false\r\n    });\r\n    return result.isConfirmed ? result.value : '';\r\n};\r\n\r\nexport const YesNoAlert = async (\r\n    icon: SweetAlertIcon = 'warning',\r\n    title: string = '¿Estas seguro?',\r\n    description: string = 'Esta accion no se puede deshacer',\r\n    confirmDescription: string = 'Confirmar'\r\n) => {\r\n    const result = await Swal.fire({\r\n        title: title,\r\n        text: description,\r\n        icon: icon,\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: confirmDescription,\r\n        cancelButtonText: 'Cancelar'\r\n    });\r\n    return result.isConfirmed;\r\n};\r\n\r\nexport const SmallIconAllert = (icon: SweetAlertIcon = \"success\", text: string = 'Exito', timer: number = 1500, position: SweetAlertPosition = 'top-end') => {\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: position,\r\n        showConfirmButton: false,\r\n        timer: timer,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    });\r\n    Toast.fire({\r\n        icon: icon,\r\n        title: text\r\n    });\r\n}\r\n\r\nexport const TwoOptionsAlert = async (\r\n    title: string = 'Seleccione la opcion a visualizar',\r\n    option1: string = '',\r\n    option2: string = ''\r\n) => {\r\n    const result = await Swal.fire({\r\n        title: title,\r\n        text: '',\r\n        showCancelButton: true,\r\n        // confirmButtonColor: themeColor.primary,\r\n        // cancelButtonColor: themeColor.primary,\r\n        confirmButtonText: option1,\r\n        cancelButtonText: option2\r\n    });\r\n    return result.isConfirmed ? 0 : 1;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/tasks.service\";\nexport class TaskFormComponent {\n  constructor(fb, _tasksService) {\n    this.fb = fb;\n    this._tasksService = _tasksService;\n    this.taskToEdit = null;\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n  addTask() {\n    if (this.isEditing && this.taskToEdit) {\n      // const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n      // if (index !== -1) {\n      //   this.tasks[index] = {\n      //     ...this.taskToEdit,\n      //     ...this.taskForm.value,\n      //   };\n      // }\n      // this.isEditing = false;\n      // this.taskToEdit = null;\n    } else {\n      const newTask = {\n        taskId: \"\",\n        title: this.taskForm.value.title,\n        description: this.taskForm.value.description,\n        creation_date: new Date(),\n        completed: false\n      };\n      this._tasksService;\n    }\n    // this.saveTasks();\n    // this.taskForm.reset();\n  }\n\n  static {\n    this.ɵfac = function TaskFormComponent_Factory(t) {\n      return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TasksService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskFormComponent,\n      selectors: [[\"app-task-form\"]],\n      inputs: {\n        isEditing: \"isEditing\",\n        taskToEdit: \"taskToEdit\"\n      },\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"w-full\", \"bg-white\", \"p-6\", \"rounded-lg\", \"shadow-md\", \"h-fit\", \"sticky\", \"top-20\"], [1, \"text-xl\", \"font-bold\", \"mb-4\", \"text-blue-700\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"formControlName\", \"title\", \"type\", \"text\", 1, \"mt-1\", \"block\", \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"text-sm\"], [\"formControlName\", \"description\", \"rows\", \"3\", 1, \"mt-1\", \"block\", \"w-full\", \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"text-sm\"], [\"type\", \"submit\", 1, \"bg-blue-600\", \"text-white\", \"px-4\", \"py-2\", \"rounded-lg\", \"hover:bg-blue-700\", \"w-full\", \"disabled:opacity-50\", 3, \"disabled\"]],\n      template: function TaskFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Agregar nueva tarea\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function TaskFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"T\\u00EDtulo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n          i0.ɵɵtext(10, \"Descripci\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"textarea\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 7);\n          i0.ɵɵtext(13, \" Agregar tarea \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.taskForm.invalid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","TaskFormComponent","constructor","fb","_tasksService","taskToEdit","taskForm","group","title","required","description","addTask","isEditing","newTask","taskId","value","creation_date","Date","completed","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","TasksService","selectors","inputs","decls","vars","consts","template","TaskFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskFormComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-form\\task-form.component.ts","C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-form\\task-form.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TasksService } from 'src/app/services/tasks.service';\nimport { Task } from 'src/app/types/task.type';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html'\n})\nexport class TaskFormComponent {\n  taskForm: FormGroup;\n  @Input() isEditing!: boolean;\n  @Input() taskToEdit: Task | null = null\n\n  constructor(\n    private fb: FormBuilder,\n    private _tasksService: TasksService\n  ) {\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  addTask(): void {\n    if (this.isEditing && this.taskToEdit) {\n      // const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n      // if (index !== -1) {\n      //   this.tasks[index] = {\n      //     ...this.taskToEdit,\n      //     ...this.taskForm.value,\n      //   };\n      // }\n      // this.isEditing = false;\n      // this.taskToEdit = null;\n    } else {\n      const newTask: Task = {\n        taskId: \"\",\n        title: this.taskForm.value.title,\n        description: this.taskForm.value.description,\n        creation_date: new Date(),\n        completed: false,\n      };\n      this._tasksService\n    }\n\n    // this.saveTasks();\n    // this.taskForm.reset();\n  }\n}\n","<div class=\"w-full bg-white p-6 rounded-lg shadow-md h-fit sticky top-20\">\n    <h2 class=\"text-xl font-bold mb-4 text-blue-700\">Agregar nueva tarea</h2>\n    <form [formGroup]=\"taskForm\" (ngSubmit)=\"addTask()\">\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium text-gray-700\">Título</label>\n        <input\n          formControlName=\"title\"\n          type=\"text\"\n          class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 text-sm\"\n        />\n      </div>\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium text-gray-700\">Descripción</label>\n        <textarea\n          formControlName=\"description\"\n          rows=\"3\"\n          class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 text-sm\"\n        ></textarea>\n      </div>\n      <button\n        type=\"submit\"\n        [disabled]=\"taskForm.invalid\"\n        class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 w-full disabled:opacity-50\"\n      >\n        Agregar tarea\n      </button>\n    </form>\n  </div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,iBAAiB;EAK5BC,YACUC,EAAe,EACfC,aAA2B;IAD3B,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,aAAa,GAAbA,aAAa;IAJd,KAAAC,UAAU,GAAgB,IAAI;IAMrC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACtC,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACL,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACP,UAAU,EAAE;MACrC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD,MAAM;MACL,MAAMQ,OAAO,GAAS;QACpBC,MAAM,EAAE,EAAE;QACVN,KAAK,EAAE,IAAI,CAACF,QAAQ,CAACS,KAAK,CAACP,KAAK;QAChCE,WAAW,EAAE,IAAI,CAACJ,QAAQ,CAACS,KAAK,CAACL,WAAW;QAC5CM,aAAa,EAAE,IAAIC,IAAI,EAAE;QACzBC,SAAS,EAAE;OACZ;MACD,IAAI,CAACd,aAAa;;IAGpB;IACA;EACF;;;;uBAvCWH,iBAAiB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAjBvB,iBAAiB;MAAAwB,SAAA;MAAAC,MAAA;QAAAd,SAAA;QAAAP,UAAA;MAAA;MAAAsB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT9Bb,EAAA,CAAAe,cAAA,aAA0E;UACrBf,EAAA,CAAAgB,MAAA,0BAAmB;UAAAhB,EAAA,CAAAiB,YAAA,EAAK;UACzEjB,EAAA,CAAAe,cAAA,cAAoD;UAAvBf,EAAA,CAAAkB,UAAA,sBAAAC,oDAAA;YAAA,OAAYL,GAAA,CAAAtB,OAAA,EAAS;UAAA,EAAC;UACjDQ,EAAA,CAAAe,cAAA,aAAkB;UACuCf,EAAA,CAAAgB,MAAA,kBAAM;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UACrEjB,EAAA,CAAAoB,SAAA,eAIE;UACJpB,EAAA,CAAAiB,YAAA,EAAM;UACNjB,EAAA,CAAAe,cAAA,aAAkB;UACuCf,EAAA,CAAAgB,MAAA,wBAAW;UAAAhB,EAAA,CAAAiB,YAAA,EAAQ;UAC1EjB,EAAA,CAAAoB,SAAA,mBAIY;UACdpB,EAAA,CAAAiB,YAAA,EAAM;UACNjB,EAAA,CAAAe,cAAA,iBAIC;UACCf,EAAA,CAAAgB,MAAA,uBACF;UAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;UAvBLjB,EAAA,CAAAqB,SAAA,GAAsB;UAAtBrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAA3B,QAAA,CAAsB;UAmBxBa,EAAA,CAAAqB,SAAA,GAA6B;UAA7BrB,EAAA,CAAAsB,UAAA,aAAAR,GAAA,CAAA3B,QAAA,CAAAoC,OAAA,CAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
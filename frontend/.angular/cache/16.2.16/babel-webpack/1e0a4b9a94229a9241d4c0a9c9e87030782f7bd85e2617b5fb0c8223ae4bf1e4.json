{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.tasks = [];\n    this.isEditing = false;\n    this.taskToEdit = null;\n    this.loading = false;\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    // Aquí puedes cargar las tareas desde una base de datos (simulado con localStorage)\n    const savedTasks = localStorage.getItem('tasks');\n    if (savedTasks) {\n      this.tasks = JSON.parse(savedTasks);\n    }\n  }\n  addTask() {\n    if (this.isEditing && this.taskToEdit) {\n      // Editar tarea existente\n      const index = this.tasks.findIndex(t => t.id === this.taskToEdit?.id);\n      if (index !== -1) {\n        this.tasks[index] = {\n          ...this.taskToEdit,\n          ...this.taskForm.value\n        };\n      }\n      this.isEditing = false;\n      this.taskToEdit = null;\n    } else {\n      // Agregar nueva tarea\n      const newTask = {\n        id: uuidv4(),\n        title: this.taskForm.value.title,\n        description: this.taskForm.value.description,\n        createdAt: new Date(),\n        completed: false\n      };\n      this.tasks.push(newTask);\n    }\n    this.saveTasks();\n    this.taskForm.reset();\n  }\n  toggleTaskStatus(task) {\n    task.completed = !task.completed;\n    this.saveTasks();\n  }\n  editTask(task) {\n    this.isEditing = true;\n    this.taskToEdit = task;\n    this.taskForm.patchValue(task);\n  }\n  deleteTask(id) {\n    this.tasks = this.tasks.filter(task => task.id !== id);\n    this.saveTasks();\n  }\n  saveTasks() {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n  }\n  logout() {\n    // Simula el cierre de sesión\n    alert('Cerrando sesión...');\n    // Redirigir al inicio de sesión (puedes usar el Router aquí)\n  }\n};\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html'\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","fb","tasks","isEditing","taskToEdit","loading","taskForm","group","title","Validators","required","description","ngOnInit","savedTasks","localStorage","getItem","JSON","parse","addTask","index","findIndex","t","id","value","newTask","uuidv4","createdAt","Date","completed","push","saveTasks","reset","toggleTaskStatus","task","editTask","patchValue","deleteTask","filter","setItem","stringify","logout","alert","__decorate","selector","templateUrl"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\pages\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html'\n})\nexport class DashboardComponent {\n  taskForm: FormGroup;\n  tasks: Task[] = [];\n  isEditing: boolean = false;\n  taskToEdit: Task | null = null;\n  loading: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    // Aquí puedes cargar las tareas desde una base de datos (simulado con localStorage)\n    const savedTasks = localStorage.getItem('tasks');\n    if (savedTasks) {\n      this.tasks = JSON.parse(savedTasks);\n    }\n  }\n\n  addTask(): void {\n    if (this.isEditing && this.taskToEdit) {\n      // Editar tarea existente\n      const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n      if (index !== -1) {\n        this.tasks[index] = {\n          ...this.taskToEdit,\n          ...this.taskForm.value,\n        };\n      }\n      this.isEditing = false;\n      this.taskToEdit = null;\n    } else {\n      // Agregar nueva tarea\n      const newTask: Task = {\n        id: uuidv4(),\n        title: this.taskForm.value.title,\n        description: this.taskForm.value.description,\n        createdAt: new Date(),\n        completed: false,\n      };\n      this.tasks.push(newTask);\n    }\n\n    this.saveTasks();\n    this.taskForm.reset();\n  }\n\n  toggleTaskStatus(task: Task): void {\n    task.completed = !task.completed;\n    this.saveTasks();\n  }\n\n  editTask(task: Task): void {\n    this.isEditing = true;\n    this.taskToEdit = task;\n    this.taskForm.patchValue(task);\n  }\n\n  deleteTask(id: string): void {\n    this.tasks = this.tasks.filter((task) => task.id !== id);\n    this.saveTasks();\n  }\n\n  saveTasks(): void {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n  }\n\n  logout(): void {\n    // Simula el cierre de sesión\n    alert('Cerrando sesión...');\n    // Redirigir al inicio de sesión (puedes usar el Router aquí)\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
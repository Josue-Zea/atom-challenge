{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class TaskFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n  addTask() {\n    // if (this.isEditing && this.taskToEdit) {\n    // Editar tarea existente\n    // const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n    // if (index !== -1) {\n    //   this.tasks[index] = {\n    //     ...this.taskToEdit,\n    //     ...this.taskForm.value,\n    //   };\n    // }\n    // this.isEditing = false;\n    // this.taskToEdit = null;\n    // } else {\n    // Agregar nueva tarea\n    // const newTask: Task = {\n    //   id: \"\",\n    //   title: this.taskForm.value.title,\n    //   description: this.taskForm.value.description,\n    //   creation_date: new Date(),\n    //   completed: false,\n    // };\n    // this.tasks.push(newTask);\n    // }\n    // this.saveTasks();\n    // this.taskForm.reset();\n  }\n  static {\n    this.ɵfac = function TaskFormComponent_Factory(t) {\n      return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskFormComponent,\n      selectors: [[\"app-task-form\"]],\n      decls: 2,\n      vars: 0,\n      template: function TaskFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"task-form works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","TaskFormComponent","constructor","fb","taskForm","group","title","required","description","addTask","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","template","TaskFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-form\\task-form.component.ts","C:\\Users\\jdzea\\Desktop\\Atom Challenge\\solution\\frontend\\src\\app\\components\\task-form\\task-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html'\n})\nexport class TaskFormComponent {\n  taskForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n\n  addTask(): void {\n    // if (this.isEditing && this.taskToEdit) {\n      // Editar tarea existente\n      // const index = this.tasks.findIndex((t) => t.id === this.taskToEdit?.id);\n      // if (index !== -1) {\n      //   this.tasks[index] = {\n      //     ...this.taskToEdit,\n      //     ...this.taskForm.value,\n      //   };\n      // }\n      // this.isEditing = false;\n      // this.taskToEdit = null;\n    // } else {\n      // Agregar nueva tarea\n      // const newTask: Task = {\n      //   id: \"\",\n      //   title: this.taskForm.value.title,\n      //   description: this.taskForm.value.description,\n      //   creation_date: new Date(),\n      //   completed: false,\n      // };\n      // this.tasks.push(newTask);\n    // }\n\n    // this.saveTasks();\n    // this.taskForm.reset();\n  }\n}\n","<p>task-form works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAMnE,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAC5BC,KAAK,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ;KACtC,CAAC;EACJ;EAEAE,OAAOA,CAAA;IACL;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;IAEA;IACA;EAAA;;;uBAnCSR,iBAAiB,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAjBZ,iBAAiB;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCP9BT,EAAA,CAAAW,cAAA,QAAG;UAAAX,EAAA,CAAAY,MAAA,uBAAgB;UAAAZ,EAAA,CAAAa,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}